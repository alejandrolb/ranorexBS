///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RegressionTest_v1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddDimensions recording.
    /// </summary>
    [TestModule("d0ac7e44-f744-4ac0-b610-ce8dc8a3f10a", ModuleType.Recording, 1)]
    public partial class AddDimensions : ITestModule
    {
        /// <summary>
        /// Holds an instance of the RegressionTest_v1Repository repository.
        /// </summary>
        public static RegressionTest_v1Repository repo = RegressionTest_v1Repository.Instance;

        static AddDimensions instance = new AddDimensions();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddDimensions()
        {
            mainAccount = "511151000";
            costCenter = "2050600010";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddDimensions Instance
        {
            get { return instance; }
        }

#region Variables

        string _mainAccount;

        /// <summary>
        /// Gets or sets the value of variable mainAccount.
        /// </summary>
        [TestVariable("523dbe3a-1139-46a2-9382-ba2e1f417696")]
        public string mainAccount
        {
            get { return _mainAccount; }
            set { _mainAccount = value; }
        }

        string _costCenter;

        /// <summary>
        /// Gets or sets the value of variable costCenter.
        /// </summary>
        [TestVariable("1ede8a9f-7164-4b2a-ae8d-7b0a16438eb5")]
        public string costCenter
        {
            get { return _costCenter; }
            set { _costCenter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "7.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DimensionFields.ClickMainAccount' at Center.", repo.DimensionFields.ClickMainAccountInfo, new RecordItemIndex(1));
            repo.DimensionFields.ClickMainAccount.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$mainAccount'.", new RecordItemIndex(2));
            Keyboard.Press(mainAccount);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DimensionFields.clickCostCenter' at 16;11.", repo.DimensionFields.clickCostCenterInfo, new RecordItemIndex(3));
            repo.DimensionFields.clickCostCenter.Click("16;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$costCenter'.", new RecordItemIndex(4));
            Keyboard.Press(costCenter);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LMenu down}{LMenu up}{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{LMenu down}{LMenu up}{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3ms.", new RecordItemIndex(6));
            Delay.Duration(3, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
